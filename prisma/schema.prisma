generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum ArticleCategory {
  NEWS
  GUIDE
  TIER_LIST
  EVENT

  @@map("article_category")
}

enum GuideType {
  CHARACTER_BUILD
  TEAM_COMP
  EQUIPMENT
  STRATEGY
  BEGINNER
  ADVANCED
  EVENT_GUIDE
  FARMING

  @@map("guide_type")
}

enum DifficultyLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
  EXPERT

  @@map("difficulty_level")
}

model Article {
  id              String              @id @default(cuid())
  title           String
  summary         String
  author          String
  publishedAt     DateTime
  slug            String              @unique
  imageUrl        String?
  content         String
  metaDescription String?
  readingTime     Int?
  category        ArticleCategory?
  isPopular       Boolean             @default(false)
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  gameId          String
  seoKeywords     ArticleSeoKeyword[]
  tags            ArticleTag[]
  game            Game                @relation(fields: [gameId], references: [id])

  @@index([gameId])
  @@index([isPopular])
  @@index([publishedAt])
  @@index([category])
  @@index([author])
  @@map("articles")
}

model Game {
  id           String         @id @default(cuid())
  name         String         @unique
  slug         String         @unique
  description  String?
  genre        String?
  developer    String?
  releaseDate  String?
  imageUrl     String?
  logoUrl      String?
  isPopular    Boolean        @default(false)
  officialSite String?
  wiki         String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  articles     Article[]
  guides       Guide[]
  tags         GameTag[]
  platforms    GamePlatform[]

  @@index([isPopular])
  @@index([genre])
  @@map("games")
}

model Tag {
  id        String       @id @default(cuid())
  name      String       @unique
  slug      String       @unique
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  articles  ArticleTag[]
  games     GameTag[]
  guides    GuideTag[]

  @@map("tags")
}

model ArticleTag {
  articleId String
  tagId     String
  createdAt DateTime @default(now())
  tag       Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)
  article   Article  @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@id([articleId, tagId])
  @@index([articleId])
  @@index([tagId])
  @@map("article_tags")
}

model GameTag {
  gameId    String
  tagId     String
  createdAt DateTime @default(now())
  tag       Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@id([gameId, tagId])
  @@index([gameId])
  @@index([tagId])
  @@map("game_tags")
}

model SeoKeyword {
  id        String              @id @default(cuid())
  keyword   String              @unique
  createdAt DateTime            @default(now())
  updatedAt DateTime            @updatedAt
  articles  ArticleSeoKeyword[]
  guides    GuideSeoKeyword[]

  @@map("seo_keywords")
}

model ArticleSeoKeyword {
  articleId String
  keywordId String
  createdAt DateTime   @default(now())
  keyword   SeoKeyword @relation(fields: [keywordId], references: [id], onDelete: Cascade)
  article   Article    @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@id([articleId, keywordId])
  @@index([articleId])
  @@index([keywordId])
  @@map("article_seo_keywords")
}

model Guide {
  id                String              @id @default(cuid())
  title             String
  summary           String
  content           String
  author            String
  publishedAt       DateTime
  updatedAt         DateTime            @updatedAt
  createdAt         DateTime            @default(now())
  slug              String              @unique
  imageUrl          String?
  readingTime       Int?
  difficulty        DifficultyLevel
  guideType         GuideType
  isPopular         Boolean             @default(false)
  viewCount         Int                 @default(0)
  gameId            String
  metaDescription   String?
  seoKeywords       GuideSeoKeyword[]
  tags              GuideTag[]
  prerequisites     GuidePrerequisite[]
  sections          GuideSection[]
  game              Game                @relation(fields: [gameId], references: [id])

  @@index([gameId])
  @@index([isPopular])
  @@index([publishedAt])
  @@index([difficulty])
  @@index([guideType])
  @@index([author])
  @@map("guides")
}

model GuideSection {
  id        String   @id @default(cuid())
  title     String
  content   String
  order     Int
  guideId   String
  createdAt DateTime @default(now())
  guide     Guide    @relation(fields: [guideId], references: [id], onDelete: Cascade)

  @@index([guideId])
  @@index([order])
  @@map("guide_sections")
}

model GuidePrerequisite {
  id          String   @id @default(cuid())
  description String
  guideId     String
  createdAt   DateTime @default(now())
  guide       Guide    @relation(fields: [guideId], references: [id], onDelete: Cascade)

  @@index([guideId])
  @@map("guide_prerequisites")
}

model GuideTag {
  guideId   String
  tagId     String
  createdAt DateTime @default(now())
  tag       Tag      @relation(fields: [tagId], references: [id], onDelete: Cascade)
  guide     Guide    @relation(fields: [guideId], references: [id], onDelete: Cascade)

  @@id([guideId, tagId])
  @@index([guideId])
  @@index([tagId])
  @@map("guide_tags")
}

model GuideSeoKeyword {
  guideId   String
  keywordId String
  createdAt DateTime   @default(now())
  keyword   SeoKeyword @relation(fields: [keywordId], references: [id], onDelete: Cascade)
  guide     Guide      @relation(fields: [guideId], references: [id], onDelete: Cascade)

  @@id([guideId, keywordId])
  @@index([guideId])
  @@index([keywordId])
  @@map("guide_seo_keywords")
}

model Platform {
  id        String         @id @default(cuid())
  name      String         @unique
  slug      String         @unique
  color     String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  games     GamePlatform[]

  @@map("platforms")
}

model GamePlatform {
  gameId     String
  platformId String
  createdAt  DateTime @default(now())
  game       Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  platform   Platform @relation(fields: [platformId], references: [id], onDelete: Cascade)

  @@id([gameId, platformId])
  @@index([gameId])
  @@index([platformId])
  @@map("game_platforms")
}

